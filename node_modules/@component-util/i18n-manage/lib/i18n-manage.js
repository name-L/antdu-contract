/*!
 * Copyright (c) 2010-2018 EEFUNG Software Co.Ltd. All rights reserved.
 * 版权所有 (c) 2010-2018 湖南蚁坊软件股份有限公司。保留所有权利。
 */

'use strict';

const $Script = require('scriptjs');

/**
 * i18n-manage.js
 * 使用方法：
 * import I18nManage from "@component-util/i18n-manage";
 *
 * I18nManage.add(theme, trunkData, entryKey);
 * I18nManage.regist(theme, trunkUrl, entryKey);
 * I18nManage.fetch(theme, cb);
 *
 * Created by wuyaoqian on 2018/11/26.
 */

let _MessageAddedCallBack_;
/**
 * 国际化消息资源对象
 * @type {{string:{string:{}}}} - {
 *      [lang1]: {[module1]: [data1], [module2]: [data2], ...},
 *      [lang2]: {[module1]: [data1], [module2]: [data2], ...},
 *      ...
 * }
 */
const _MessageDataCache_ = {};

/**
 * 国际化块级资源Data对象
 * @type {{string:{string:[{}]}}} - {
 *      [lang1]:{ [entryKey1]: [trunkData1], [entryKey2]: [trunkData2], ... },
 *      [lang2]:{ [entryKey1]: [trunkData1], [entryKey2]: [trunkData2], ... },
 *      ...
 * }
 */
const _EntryResourceDataCache_ = {};

/**
 * 国际化块级资源URL对象
 * @type {{string:{string:string}}} - {
 *      [lang1]:{ [entryKey1]:[trunkUrl1], [entryKey2]:[trunkUrl2], ... },
 *      [lang2]:{ [entryKey1]:[trunkUrl1], [entryKey2]:[trunkUrl2], ... },
 *      ...
 * }
 */
const _EntryResourceUrlCache_ = {};

const I18nManage = {
    /**
     * 添加国际化资源
     * @param {string} lang
     * @param {object[]} trunkData
     * @param {string} entryKey
     * @return {object} I18nManage
     */
    add (lang, trunkData, entryKey) {
        let key = entryKey || 'none';
        _EntryResourceDataCache_[lang] = _EntryResourceDataCache_[lang] || {};
        _EntryResourceUrlCache_[lang] = _EntryResourceUrlCache_[lang] || {};
        if (!_EntryResourceDataCache_[lang][key]) {
            _EntryResourceUrlCache_[lang][key] = null;
            _MessageDataCache_[lang] = _MessageDataCache_[lang] || {};
            (_EntryResourceDataCache_[lang][key] = trunkData || []).forEach((obj) => {
                Object.assign(_MessageDataCache_[lang], obj || {});
                if (typeof _MessageAddedCallBack_ === 'function') {
                    _MessageAddedCallBack_(obj || {}, lang);
                }
            });
        } else {
            console.warn('The key (%s) of lang (%s) resource data already exist!', key, lang);
        }
        return I18nManage;
    },
    /**
     * 注册国际化入口资源
     * @param {string} lang
     * @param {string} trunkUrl
     * @param {string} entryKey
     * @return {object} I18nManage
     */
    regist (lang, trunkUrl, entryKey) {
        let key = entryKey || 'none';
        _EntryResourceDataCache_[lang] = _EntryResourceDataCache_[lang] || {};
        _EntryResourceUrlCache_[lang] = _EntryResourceUrlCache_[lang] || {};
        if (!_EntryResourceUrlCache_[lang][key]) {
            _EntryResourceUrlCache_[lang][key] = trunkUrl || '';
        } else {
            console.warn('The key (%s) of lang (%s) resource url already exist!', key, lang);
        }
        return I18nManage;
    },
    /**
     * 获取国际化资源
     * @param {string} lang
     * @param {function(data)} cb
     * @return {object} I18nManage
     */
    fetch (lang, cb) {
        _EntryResourceDataCache_[lang] = _EntryResourceDataCache_[lang] || {};
        _EntryResourceUrlCache_[lang] = _EntryResourceUrlCache_[lang] || {};
        let finish = function () {
            return cb && typeof cb === 'function' && cb(_MessageDataCache_[lang] || {});
        };
        let keys = Object.keys(_EntryResourceUrlCache_[lang]);
        let len = keys.length;
        let count = 0;
        keys.forEach((key) => {
            // 已存在，直接跳过
            if (_EntryResourceDataCache_[lang][key]) {
                if (len <= ++count) { finish(); }
                return;
            }
            // 排除无效
            if (!_EntryResourceUrlCache_[lang][key]) {
                if (len <= ++count) { finish(); }
                return;
            }
            // 不存在，异步下载（ 需要异步 js 中调用 I18nManage.add(lang, trunkData, appKey), 之后下次将不在需要异步下载 ）
            $Script(_EntryResourceUrlCache_[lang][key], () => {
                if (len <= ++count) { finish(); }
            });
        });
        return I18nManage;
    }
};

/**
 * 设置国际化资源添加后的回调句柄
 * @param handler
 */
I18nManage.add.setMessageAddedCallBackHandler = function (handler) {
    if (handler && typeof handler === 'function') { _MessageAddedCallBack_ = handler; }
};

module.exports = I18nManage;