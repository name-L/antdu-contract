var utils = require("./utils");
var debugTrace = require("./defaultOpts").debugTrace;
var serviceName = require("./defaultOpts").serviceName;
var request = require("request");
var zipkinUrl = require("./defaultOpts").zipkinUrl;

//拼装要发送到zipkin的数据
function generateZipkinData(httpCode) {

    this.serverSendTimestamp = Date.now() * 1000;

    this.annotations[this.serverSendTimestamp] = "ss";

    this.binaryAnnotations['http.responseCode'] = httpCode ? httpCode + '' : "-1";

    var body = {
        // traceid
        traceId: this.traceId,
        // spanname
        name: this.spanName,
        // spanid
        id: this.spanId,
        // 父类的spanid,没有填入-1
        parentId: this.parentId || "-1",
        // 延时,没有填入-1
        duration: "-1",
        // ipv地址
        ip: this.ip,
        // 端口号
        port: this.port,
        // serviceName
        serviceName: this.serviceName,
        // annotations
        annos: this.annotations,
        // span创建时间
        timestamp: this.serverReceiveTimestamp,
        // span额外描述(key,value)形式
        binaryAnnotationKV: this.binaryAnnotations,
        // nanotime
        nanoTime: this.serverReceiveTimestamp * 1000
    };

    return {
        "headers": {
            dataType: "zipkin"
        },
        "body": body
    };
}

//创建一个trace
function trace(opts) {
    this.reqUrl = opts.reqUrl;
    this.method = opts.method;
    this.serviceName = opts.serviceName || serviceName;
    //如果自定义了spanName，使用自定义spanName
    //如果没有自定义spanName,则使用“http方法 小写路径”的形式
    //例如 “get /rest/user”
    this.spanName = opts.spanName || (this.method + ' ' + utils.getPathname(this.reqUrl).toLowerCase());
    this.port = opts.port || '-1';
    if (typeof this.method !== 'string' || !this.method) {
        this.method = 'get';
    }
    this.method = this.method.toLowerCase();
    if (typeof this.port !== 'string') {
        this.port += '';
    }
    this.traceId = opts.traceId || utils.randomInt64();
    this.spanId = utils.randomInt64();
    this.parentId = opts.parentId;
    var originServerIp = utils.getIp();
    this.ip = originServerIp;
    if (!this.ip) {
        this.ip = "-1";
    }
    this.serverReceiveTimestamp = (opts.timestamp || Date.now() * 1000) + '';
    this.serverSendTimestamp = null;
    this.annotations = {};
    this.binaryAnnotations = {};
    this.annotations[this.serverReceiveTimestamp] = 'sr';
    this.binaryAnnotations['http.method'] = this.method.toUpperCase();
    this.binaryAnnotations['http.uri'] = this.reqUrl;
    this.binaryAnnotations['server.ip'] = originServerIp;
    this.binaryAnnotations['server.port'] = this.port;
    this.binaryAnnotations['client.ip'] = opts.clientIp || '-1';
    this.binaryAnnotations['client.userAgent'] = opts.userAgent || '-1';
}

//记录一条日志
function record(data) {
    sendRequest(data);
}

//trace的原型
trace.prototype = {
    generateZipkinData: generateZipkinData,
    record: record
};

//发送给后端服务器
function sendRequest(obj) {
    var requestObj = {
        method: "POST",
        headers: obj.headers,
        uri: zipkinUrl,
        qs: {},
        json: true,
        body: obj.body
    };
    if (debugTrace) {
        console.log("send zipkin trace to server " + JSON.stringify(obj, null, 4));
    }
    request(requestObj, function (error, response, body) {
        if (debugTrace) {
            if (error) {
                console.error("send zipkin to server error : " + error.toString());
            } else {
                console.log("send zipkin to server : " + response.statusCode + ' ' + body);
            }
        }
    });
}

//设置是否打印到控制台
function setDebugTrace(debug) {
    debugTrace = debug;
}

//设置serviceName
function setServiceName(s) {
    serviceName = s;
}

//设置zipkin的url
function setZipkinUrl(url) {
    zipkinUrl = url;
}

//导出tracer
exports.Tracer = trace;
//设置是否打印到控制台
exports.setDebugTrace = setDebugTrace;
//设置serviceName
exports.setServiceName = setServiceName;
//设置zipkinUrl
exports.setZipkinUrl = setZipkinUrl;