/// <reference types="node" />
/// <reference types="bluebird" />
import stream = require('stream');
import * as Promise from 'bluebird';
import { ClientNetworkConfig } from '../Config';
import Address = require('../Address');
declare class ClientConnection {
    address: Address;
    localAddress: Address;
    socket: stream.Duplex;
    lastRead: number;
    heartbeating: boolean;
    private readBuffer;
    private logging;
    private clientNetworkConfig;
    constructor(address: Address, clientNetworkConfig: ClientNetworkConfig);
    getLocalAddress(): Address;
    getAddress(): Address;
    connect(): Promise<ClientConnection>;
    write(buffer: Buffer, cb: (err: any) => void): void;
    close(): void;
    registerResponseCallback(callback: Function): void;
}
export = ClientConnection;
