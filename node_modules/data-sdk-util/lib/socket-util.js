/*!
 * Copyright (c) 2010-2020 EEFUNG Software Co.Ltd. All rights reserved.
 * 版权所有 (c) 2010-2020 湖南蚁坊软件股份有限公司。保留所有权利。
 */

'use strict';

/**
 * Client Socket 相关
 * Created by wuyaoqian on 16/2/4.
 */

const DataSdkRest = require('data-sdk-rest');
const restInfoManage = DataSdkRest.userDataManage.socketRequest.restInfo;

module.exports = {
    /**
     * 1. 获取符合条件的 client socket
     * @param nsp {Object}
     * @param include {object} {
     *      uid: '',                    // user id (必须)
     *      sid: '',                    // session id (可以为空)
     * }
     * @param except {object} {
     *      cid: '',                    // client socket id (可以为空)
     *      sid: '',                    // session id (可以为空)
     * }
     * @param onlyOneSocket {boolean}   // 是否只需找到一个 socket 就返回
     * @returns {Array}
     */
    getClientSockets: function (nsp, include, except, onlyOneSocket) {
        let info;
        let found = [];
        let map = nsp.connected;
        let ids = map ? Object.keys(map) : [];
        include = include || {};
        except = except || {};
        for (let i = 0; i < ids.length; i++) {
            info = restInfoManage.get(map[ids[i]].request) || {};
            if (
                (except.cid ? except.cid !== ids[i] : true) &&
                (except.sid ? except.sid !== info.sid : true) &&
                // ------ 上面为except条件判断，下面为include条件判断 ------
                (include.uid ? include.uid === info.userid : true) &&
                (include.sid ? include.sid === info.sid : true)
            ) {
                found.push(map[ids[i]]);
                if (onlyOneSocket) {
                    break;
                }
            }
        }
        return found;
    },
    /**
     * 2. 根据用户分组名，获取在线用户
     * @param nsp {object}
     * @param name {string}
     * @return {Array}
     */
    getOnlineUserIdsByRoomName: function (nsp, name) {
        let userid;
        let ids = [];
        let room = nsp.adapter.rooms[name];
        if (room) {
            Object.keys(room.sockets).forEach(function (socketid) {
                if (!nsp.connected[socketid]) { return; }
                userid = restInfoManage.get(nsp.connected[socketid].request).userid;
                if (ids.indexOf(userid) === -1) {
                    ids.push(userid);
                }
            });
        }
        return ids;
    }
};
