/*!
 * Copyright (c) 2010-2017 EEFUNG Software Co.Ltd. All rights reserved.
 * 版权所有 (c) 2010-2017 湖南蚁坊软件股份有限公司。保留所有权利。
 */

"use strict";

/**
 *
 * Created by wuyaoqian on 2017/3/2.
 */

// 只初始化一次全局日志配置信息（主要是将原来的json变成js -- 方便写注释）
require("log4js-config").init(function () {
    return require("./config/app-logging.js");
});

var CasterClient = require('../index');
var mapManage = CasterClient.mapManage;

var promise = mapManage.getInstance('test-map', 1000 * 60 * 0.5);
//var promise = mapManage.getInstance('civiw-ic-session', 1000 * 60 * 5);
// var promise = mapManage.getInstance('www-civiw-ic-session', 1000 * 60 * 5);
// var promise = mapManage.getInstance('local-eageye-session', 1000 * 60 * 5);

promise.then(function (instance) {

    var entryids = [];
    const listener = function (instance) {
        instance.addEntryListener({
            added: function (key, oldValue, newValue) {
                console.info('added:', key, oldValue, newValue, arguments);
            },
            updated: function (key, oldValue, newValue) {
                console.info('updated:', key, oldValue, newValue, arguments);
            },
            // 被删除后的回调
            removed: function (key, oldValue, newValue) {
                console.info('removed:', key, oldValue, newValue, arguments);
            },
            // 自动过期后的回调
            evicted: function (key, oldValue, newValue) {
                console.info('evicted:', key, oldValue, newValue, arguments);
            }
        }, undefined, true);
    };

    listener(instance);

    var put = function (key, val, fn) {
        return instance.put(key, val, fn);
    };

    var del = function (key) {
        instance.del(key, function (error) {
            console.log('--- del success ---', !error);
        });
    };

    setInterval(function () {
        put('test', `ttt-${Math.random()}`, function (error) {
            console.log('+++ put success +++', !error);
            del('test');
        });
    }, 1000 * 10);

    // setTimeout(function () {
    //     console.debug('shutdown');
    //     instance.rawClient.getConnectionManager().shutdown();
    // }, 1000 * 25);

});