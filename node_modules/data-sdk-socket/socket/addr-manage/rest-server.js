/*!
 * Copyright (c) 2010-2020 EEFUNG Software Co.Ltd. All rights reserved.
 * 版权所有 (c) 2010-2020 湖南蚁坊软件股份有限公司。保留所有权利。
 */

'use strict';

/**
 * 推送服务地址管理
 * Created by wuyaoqian on 2017/1/18.
 */

const EventEmitter = require('events');
const DataSdkRest = require('data-sdk-rest');
const logger = require('log4js-config')
    .get('eefung.data-sdk-socket.address-manage.' + require('path').basename(__filename));

const idGenerator = function (url) {
    return JSON.stringify(url);
};

/**
 * 推送地址管理（rest-server）
 */
class CoordinatorAddress {
    /**
     * 初始化
     * @param {string} url
     * @param {string} [id]
     */
    constructor (url, id) {
        this.emitter = null;
        this.url = url;
        this.id = id || idGenerator(url);
    }

    /**
     * 1. fetch push address    格式如下： http://www.example.com:8080
     * @returns {EventEmitter}
     */
    fetch () {
        const self = this;
        if (!self.emitter) {
            self.emitter = new EventEmitter();
            // process.nextTick(function () {
            //     self.emitter.emit("success", "http://172.19.104.120:9078");
            //     delete self.emitter;
            // });
            DataSdkRest.appTokenRestler.get(self.url, {}).on('error', function (result, response) {
                logger.error('fetch push server(url: %s) error.', self.url, result);
                self.emitter.emit('error', result);
                delete self.emitter;
            }).on('fail', function (result, response) {
                logger.error('fetch push server(url: %s) fail.', self.url, result);
                self.emitter.emit('error', result);
                delete self.emitter;
            }).on('success', function (url) {
                logger.info('fetch push server(url: %s) address(%s) success.', self.url, url);
                self.emitter.emit('success', url);
                delete self.emitter;
            });
        }
        return self.emitter;
    }
}

const instances = {};

module.exports = {
    getInstance (url) {
        let id = idGenerator(url);
        return (instances[id] = instances[id] || new CoordinatorAddress(url, id));
    }
};
