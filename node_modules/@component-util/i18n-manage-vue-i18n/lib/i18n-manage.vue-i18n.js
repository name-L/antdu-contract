/*!
 * Copyright (c) 2010-2018 EEFUNG Software Co.Ltd. All rights reserved.
 * 版权所有 (c) 2010-2018 湖南蚁坊软件股份有限公司。保留所有权利。
 */

'use strict';

/**
 * i18n-manage.vue-i18n.js
 * 使用方法：
 *
 * import VueI18nManage from "@component-util/i18n-manage/lib/i18n-manage.vue-i18n.js";
 *
 * 1.1 暴露 I18nManage
 * VueI18nManage.I18nManage
 *
 * 1.2 获取 vue-i18n 的实例
 * VueI18nManage.getInstance()
 *
 * 1.3 初始化国际化
 * VueI18nManage.init(lang)
 *
 * 1.4 切换语言
 * VueI18nManage.change(lang, cb)
 *
 * 2.1 Vue 实例内的使用使用方法（实例方法）
 * vm.changeLocal(lang)
 *
 * 2.2 Vue 实例内的使用使用方法（实例属性）
 * vm.local.value      // 当前语言的名称
 * vm.local.changing   // 是否正在切换语言
 *
 * Created by wuyaoqian on 2018/10/24.
 */

import Vue from 'vue';
import VueI18n from 'vue-i18n';
import I18nManage from '@component-util/i18n-manage';

// 注册国际化插件
Vue.use(VueI18n);

// 生成实例
let instance = new VueI18n();

let isInited = false;
let status = {
    changing: false,
    value: ''
};
const VueI18nManage = {
    /**
     * 暴露 I18nManage
     */
    I18nManage: I18nManage,
    /**
     * 获取实例
     * @return {*}
     */
    getInstance () {
        return instance;
    },
    /**
     * 初始化
     * @param {string} lang
     * @return {*}
     */
    init (lang) {
        if (isInited) { return instance; }

        status.changing = true;
        // 初始化指定语言的国际化
        I18nManage.fetch(lang, (message) => {
            instance.setLocaleMessage(lang, message);
            status.changing = false;
        });
        // 设置国际化资源添加后的回调
        I18nManage.add.setMessageAddedCallBackHandler(function (message, lang) {
            instance.setLocaleMessage(lang, Object.assign(instance.getLocaleMessage(lang) || {}, message));
        });
        // 指定当前语言
        status.value = instance.locale = lang;
        isInited = true;

        return instance;
    },
    /**
     * 更改语言
     * @param {string} lang
     * @param {function(lang, error)|{before:function(lang),after:function(lang, error)}} opt
     */
    change (lang, opt) {
        // 正在切换或语言名称没有变化 => 直接返回
        if (status.changing || instance.locale === lang) { return; }
        // 规整参数
        let self = this;
        let before = function (lang) { return Promise.resolve(); };
        let after = function (lang, error) {};
        if (typeof opt === 'function') {
            after = opt;
        } else if (opt) {
            before = typeof opt.before === 'function' ? opt.before : before;
            after = typeof opt.after === 'function' ? opt.after : after;
        }
        // 设置正在切换中
        status.changing = true;
        // 开始切换
        before.call(self, lang).then(() => {
            I18nManage.fetch(lang, (message) => {
                instance.setLocaleMessage(lang, message);
                instance.locale = status.value = lang;
                setTimeout(() => {
                    after.call(self, lang, null);
                    status.changing = false;
                }, 0);
            });
        }).catch((error) => {
            status.changing = false;
            after.call(self, lang, error);
        });
    }
};

// 默认情况下，找不到国际化时，返回 key 的最后一个分隔值
instance.missing = function (local, key) {
    return key.substr(key.lastIndexOf('.') + 1);
};

// 混入i18n相关方法
Vue.mixin({
    data: function () {
        return {
            local: status
        }
    },
    methods: {
        changeLocal (lang, opt) {
            let OptLocal = this.$options.local || {};
            VueI18nManage.change.call(this, lang, opt || {
                before: OptLocal.beforeChangeHandler,
                after: OptLocal.afterChangeHandler
            });
        }
    },
    watch: {
        'local.value': function (val) {
            document.querySelector('html').setAttribute('lang', val);
        }
    }
});

module.exports = VueI18nManage;