/// <reference types="node" />
/// <reference types="bluebird" />
import * as Promise from 'bluebird';
import Address = require('../Address');
import ClientConnection = require('./ClientConnection');
import { EventEmitter } from 'events';
import HazelcastClient from '../HazelcastClient';
declare class ClientConnectionManager extends EventEmitter {
    private client;
    private pendingConnections;
    private logger;
    establishedConnections: {
        [address: string]: ClientConnection;
    };
    constructor(client: HazelcastClient);
    getOrConnect(address: Address, ownerConnection?: boolean): Promise<ClientConnection>;
    destroyConnection(address: Address): void;
    shutdown(): void;
    private onConnectionClosed(connection);
    private onConnectionOpened(connection);
    private authenticate(connection, ownerConnection);
}
export = ClientConnectionManager;
