/*!
 * Copyright (c) 2010-2018 EEFUNG Software Co.Ltd. All rights reserved.
 * 版权所有 (c) 2010-2018 湖南蚁坊软件股份有限公司。保留所有权利。
 */

'use strict';

/**
 * crypto-aes.js
 * Created by wuyaoqian on 2018/9/20.
 */

const crypto = require('crypto');

/**
 * AES 加密
 * @param data {string} 明文
 * @param secretKey {string} 密钥
 * @param opt {object} {
 *   type: 'aes-128-ecb' | 'aes-256-ecb' | ...
 *   encoding: {
 *      clear: 'utf8', cipher: 'base64'
 *   }
 * }
 * @returns {*}
 */
exports.encrypt = function (data, secretKey, opt) {
    let type = opt && opt.type ? opt.type : 'aes-128-ecb';
    let encoding = opt && opt.encoding ? opt.encoding : {};
    let clearEncoding = encoding.clear || 'utf8';
    let cipherEncoding = encoding.cipher || 'base64';
    let cipher = crypto.createCipher(type, secretKey);
    if (cipherEncoding === 'base64') {
        return cipher.update(data, clearEncoding, cipherEncoding) + cipher.final(cipherEncoding).replace(/=+$/, '');
    }
    return cipher.update(data, clearEncoding, cipherEncoding) + cipher.final(cipherEncoding);
};

/**
 * AES 解密
 * @param data {string} 密文
 * @param secretKey {string} 密钥
 * @param opt {object} {
 *   type: 'aes-128-ecb' | 'aes-256-ecb' | ...
 *   encoding: {
 *      clear: 'utf8', cipher: 'base64'
 *   }
 * }
 * @returns {*}
 */
exports.decrypt = function (data, secretKey, opt) {
    let type = opt && opt.type ? opt.type : 'aes-128-ecb';
    let encoding = opt && opt.encoding ? opt.encoding : {};
    let clearEncoding = encoding.clear || 'utf8';
    let cipherEncoding = encoding.cipher || 'base64';
    let cipher = crypto.createDecipher(type, secretKey);
    return cipher.update(data, cipherEncoding, clearEncoding) + cipher.final(clearEncoding);
};